//
//  Message_functions.cpp
//  modern_library
//
//  Created by Иван Трифонов on 07.10.2024.
//  Copyright © 2024 Иван Трифонов. All rights reserved.
//

#include "Library.hpp"

void message_string(std::string output_string) {
    std::cout << output_string << std::endl;
}

void message_leave_without_save() {
    std::cout << "Вы уверены, что хотите выйти из программы? Несохраненные данные будут удалены." << std::endl;
}

void message_words_to_stay() {
    std::cout << "Для отмены введите любое из слов: \"отмена\", \"отменить\", \"cancel\"." << std::endl;
}

void message_words_to_save_leave() {
    std::cout << "Для сохранения и выхода введите любое из слов: \"сохранить и выйти\", \"save and leave\", \"save and exit\"." << std::endl;
}

void message_words_for_exit() {
    std::cout << "Для выхода из программы введите любое из слов: \"выйти\", \"выход\", \"exit\", \"leave\"." << std::endl;
}

void message_words_to_continue_last_task() {
    std::cout << "Или продолжите выполнение исходной команды." << std::endl;
}

void message_ask_system_name() {
    std::cout << "Введите название системы для учета книг в библиотеке:" << std::endl;
}

void message_earlier_opened_systems() {
    std::cout << "\nРанее открываемые системы для учета книг в библиотеке:\n" << std::endl;
}

void message_choose_old_or_new_system() {
    std::cout << "\nВыберите систему учета книг для открытия или создайте новую." << std::endl;
}

void message_get_location_new_system() {
    std::cout << "\nДля открытия существующей системы учета книг введите местоположение ее файла." << std::endl;
}

void message_key_word_to_make_new_system() {
    std::cout << "Для создания новой системы учета введите \"новая\"." << std::endl;
}

void message_continue_make_previous_program() {
    std::cout << "" << std::endl;
}

void message_forbidden_system_name() {
    std::cout << "Запрещено использовать символ \"/\" в в названии системы для учета книг" << std::endl;
}

void message_not_valuable_existion_name() {
    std::cout << "В текущем разделе уже существует подраздел с таким именем. Выберете другое название." << std::endl;
}

void message_name_do_not_exist() {
    std::cout << "В текущем разделе не существует подраздела с таким именем. Выберете другое имя." << std::endl;
}

void message_system_saved()  {
    std::cout << "Система книг успешно сохранена." << std::endl;
}

void message_command_not_find() {
    std::cout << "Команда не найдена. Повторите попытку." << std::endl;
}

void message_ask_leave_or_not() {
    std::cout << "Вы уверены, что хотите выйти из системы?" << std::endl;
}

void message_forbidden_section_title_asked_accepted_title() {
    std::cout << "Неправильное название подраздела. Введите корректное название подраздела (запрещено создавать пустое имя подраздела, разрешено создание нескольких следующих подряд подразделов с перечислением через специальный символ \"/\"." << std::endl;
}

void message_book_with_this_name_already_exists() {
    std::cout << "Ошибка: книга с таким названием в данном разделе уже существует." << std::endl;
}

void union_message_get_and_choose_mode_opening_system() {
    message_choose_old_or_new_system();
    message_get_location_new_system();
    message_key_word_to_make_new_system();
}

void union_message_exit_or_stay_words() {
    message_words_for_exit();
    message_words_to_stay();
}

void union_message_exit_read_user() {
    message_leave_without_save();
    union_message_exit_or_stay_words();
}


void commands() {
    std::cout << "Доступные к исполнению команды:" << std::endl;
    std::cout << "  \"посмотреть сведения о системе\" - показать все сведения о системе;" << std::endl;
    std::cout << "  \"создать книгу\" - cоздание новой книги в текущем разделе;" << std::endl;
    std::cout << "  \"редактировать книгу\" - изменить поля книги;" << std::endl;
    std::cout << "  \"печать книги\" - распечатать сведения интересующей книги;" << std::endl;
    std::cout << "  \"переименовать книгу\" - изменить наименование книги в текущем разделе;" << std::endl;
    std::cout << "  \"удалить книгу\" - удаление книги" << std::endl;
    std::cout << "  \"создать подраздел\" - cоздание нового раздела в текущем для хранения книг;" << std::endl;
    std::cout << "  \"открыть подраздел\" - перейти в подраздел текущего раздела;" << std::endl;
    std::cout << "  \"раздел выше\" - открыть раздел выше по иерархии;" << std::endl;
    std::cout << "  \"переименовать раздел\" - изменить наименование текущего раздела;" << std::endl;
    std::cout << "  \"показать подразделы\" - показать все подразделы текущего раздела;" << std::endl;
    std::cout << "  \"удалить подраздел\" - удалить подраздел (со всем его содержимым);" << std::endl;
    std::cout << "  \"показать книги\" - показать названия всех книг текущего раздела;" << std::endl;
    std::cout << "  \"установить глобальное поле\" - изменить поля книги;" << std::endl;
    std::cout << "  \"показать глобальные поля\" - показать все существующие глобальные поля;" << std::endl;
    std::cout << "  \"снять глобальное поле\" - убрать глобальное значение поля;" << std::endl;
    std::cout << "  \"поиск книги\" - поиск книг в системе в соответствии с параметрами поиска;" << std::endl;
    std::cout << "  \"сохранить\", \"сохранение\", \"save\" - сохранить систему для учета книг." << std::endl;
    std::cout << "  \"сохранить как\" - сохранить систему для учета книг по новому местоположению." << std::endl;
    std::cout << "  \"выход\", \"выйти\", \"exit\", \"leave\" - завершить работу системы для учета книг." << std::endl;
    std::cout << "Выполнение любой запущенной команды можно прервать и выполнить следующее действие:\n1) отменить, введя \"отмена\", или \"отменить\", или \"cancel\";\n2) выйти из системы для учета книг, введя: \"выход\", или \"выйти\", или \"exit\", или \"leave\"." << std::endl;
}

void book_commands() {
    std::cout << "  \"создать поле\" - создать новое локальное поле книги;" << std::endl;
    std::cout << "  \"редактировать поле\" - изменить содержимое поля книги;" << std::endl;
    std::cout << "  \"удалить поле\" - удалить поле книги;" << std::endl;
    std::cout << "  \"печать книги\" - показать содержимое книги;" << std::endl;
    std::cout << "  \"установить глобальное поле\" - установить глобальное поле для всех книг;" << std::endl;
    std::cout << "  \"показать глобальные поля\" - показать все существующие глобальные поля;" << std::endl;
    std::cout << "  \"снять глобальное поле\" - убрать глобальное значение поля;" << std::endl;
    std::cout << "  \"завершить\" - завершить редактирование книги." << std::endl;
}

void Library::find_commands() {
    std::cout << "  \"текущие параметры\" - вывести текущие параметры поиска;" << std::endl;
    std::cout << "  \"название книги\" - задать название книги для поиска;" << std::endl;
    std::cout << "  \"часть названия книги\" - осуществлять поиск книги не по полному названию;" << std::endl;
    std::cout << "  \"полное название книги\" - осуществлять поиск книги по полному названию;" << std::endl;
    std::cout << "  \"параметры названия книги\" - вывести текущий параметр поиска книги;" << std::endl;
    std::cout << "  \"сбросить название книги\" - сбросить параметр поиска названия книги;\n" << std::endl;
    std::cout << "  \"ассоциация\" - поиск книги по наличию ассоциации (можно задать несколько);" << std::endl;
    std::cout << "  \"часть ассоциации\" - осуществлять поиск книги по частичному названию содержащейся ассоциации;" << std::endl;
    std::cout << "  \"полная ассоциация\" - осуществлять поиск книги по полному названию содержащейся ассоциации;" << std::endl;
    std::cout << "  \"параметры ассоциаций\" - вывести текущие параметры поиска книг по содержащимся в них ассоциациям;" << std::endl;
    std::cout << "  \"сбросить поиск ассоциации\" - сбросить параметр поиска книг по содержащейся в них конкретной ассоциации;" << std::endl;
    std::cout << "  \"сбросить поиск всех ассоциаций\" - сбросить параметр поиска книг по содержащимся в них ассоциациям;\n" << std::endl;
    std::cout << "  \"содержимое ассоциации\" - задать содержимое произвольной ассоциации для поиска книги (можно задать несколько);" << std::endl;
    std::cout << "  \"часть содержимого ассоциации\" - осуществлять поиск по части введенного содержимого поля;" << std::endl;
    std::cout << "  \"полное содержимое ассоциации\" - осуществлять поиск по полному содержимому поля;" << std::endl;
    std::cout << "  \"параметры содержимого ассоциаций\" - вывести текущие параметры поиска полей;" << std::endl;
    std::cout << "  \"сбросить поиск содержимого ассоциации\" - сбросить параметр поиска книги по конкретному содержимому ассоциации;" << std::endl;
    std::cout << "  \"сбросить поиск всех содержимых ассоциаций\" - сбросить параметры поиска книги всех содержимых ассоциаций;\n" << std::endl;
    std::cout << "  \"раздел\" - поиск книги по названию раздела;" << std::endl;
    std::cout << "  \"часть названия раздела\" - осуществлять поиск книги по частичному названию раздела;" << std::endl;
    std::cout << "  \"полное название раздела\" - осуществлять поиск книги по полному названию раздела;" << std::endl;
    std::cout << "  \"текущий раздел\" - вывести текущий параметр поиска книги по разделу;" << std::endl;
    std::cout << "  \"сбросить поиск раздела\" - сбросить параметр поиска раздела;\n" << std::endl;
    std::cout << "  \"сбросить все параметры\" - сбросить все параметры поиска;" << std::endl;
    std::cout << "  \"найти\" - вывести всю найденную информацию в соответствии с заданными параметрами поиска;" << std::endl;
    std::cout << "  \"завершить\" - завершить поиск книг по параметрам." << std::endl;
}
